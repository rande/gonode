language: go

sudo: false

addons:
  postgresql: "9.4"

matrix:
  fast_finish: true
  include:
    - go: 1.8
      env: TEST_BACKEND=on
#    - go: 1.8
#      env: TEST_FRONTEND=on TRAVIS_NODE_VERSION="0.12"

before_script:
  - curl https://dl.influxdata.com/influxdb/releases/influxdb-0.13.0_linux_amd64.tar.gz | tar xvzf -
  - ./influxdb-0.13.0-1/usr/bin/influxd &
  - sleep 2
  - if [ "$TEST_BACKEND" = "on" ]; then
        psql -c 'create database travis_ci_test;' -U postgres;
        cp -f test/config_travis.toml test/config_test.toml;
    fi

install:
  # from http://austinpray.com/ops/2015/09/20/change-travis-node-version.html
#  - if [ "$TRAVIS_NODE_VERSION" != "" ]; then rm -rf ~/.nvm && git clone https://github.com/creationix/nvm.git ~/.nvm && (cd ~/.nvm && git checkout `git describe --abbrev=0 --tags`) && source ~/.nvm/nvm.sh && nvm install $TRAVIS_NODE_VERSION; fi;
  #- if [ "$TEST_FRONTEND" = "on" ]; then make install-frontend; fi
  - if [ "$TEST_BACKEND" = "on" ];  then
        curl -L https://github.com/Masterminds/glide/releases/download/v0.12.3/glide-v0.12.3-linux-amd64.tar.gz | tar xvzf -;
        mkdir -p $HOME/bin;
        mv linux-amd64/glide $HOME/bin;
        export PATH="$HOME/bin:$PATH";

        glide install
        make install-backend;
    fi

script:
  - if [ "$TEST_BACKEND" = "on" ];  then
        go get github.com/wadey/gocovmerge;
        go get github.com/mattn/goveralls;
        go get golang.org/x/tools/cmd/cover;
        go get golang.org/x/tools/cmd/goimports;
        go get -u github.com/jteeuwen/go-bindata/...;
        ./app/assets/bindata.sh;
        mkdir -p build/coverage && rm -rf build/coverage/*.cov;
        export GOPKG="./core/bindata,./core/commands,./core/config,./core/guard,./core/helper,./core/logger,./core/router,./core/security,./core/squirrel,./core/vault,./modules/api,./modules/base,./modules/blog,./modules/debug,./modules/feed,./modules/guard,./modules/media,./modules/prism,./modules/raw,./modules/search,./modules/setup,./modules/user";
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_bindata.cov ./core/bindata;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_commands.cov ./core/commands;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_config.cov ./core/config;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_guard.cov ./core/guard;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_helper.cov ./core/helper;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_logger.cov ./core/logger;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_router.cov ./core/router;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_security.cov ./core/security;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_squirrel.cov ./core/squirrel;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/core_vault.cov ./core/vault;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_api.cov ./modules/api;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_base.cov ./modules/base;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_blog.cov ./modules/blog;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_debug.cov ./modules/debug;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_feed.cov ./modules/feed;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_guard.cov ./modules/guard;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_media.cov ./modules/media;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_prism.cov ./modules/prism;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_raw.cov ./modules/raw;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_search.cov ./modules/search;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_setup.cov ./modules/setup;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/modules_user.cov ./modules/user;
        go test -v -coverpkg ${GOPKG} -covermode count -coverprofile=build/coverage/functionnals.cov ./test/modules;
        gocovmerge build/coverage/* > build/gonode.coverage;
        go tool cover -html=./build/gonode.coverage -o build/gonode.html;
        goveralls -coverprofile=build/gonode.coverage -service=travis-ci;
    fi
#  - if [ "$TEST_FRONTEND" = "on" ]; then make test-frontend; fi

